{"version":3,"sources":["contact/contact.component.js","navbar/navbar.component.js","index.js","contacts.service.js"],"names":["defaultProfileImage","Contact","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","visibility","setActive","bind","assertThisInitialized","setNotActive","onImageError","handleChange","setState","e","target","onerror","src","event","isIntersecting","url","_this$props","profile_image","icon","job","name","company_name","phone","email","backgroundImage","indexOf","replace","react_default","a","createElement","es","onChange","rootMargin","className","onMouseOver","onMouseLeave","Fragment","concat","onError","alt","Component","Nav","type","placeholder","App","contacts","loaded","error","_this2","fetch","then","response","json","count","catch","message","length","map","contact","index","contact_component_Contact","assign","key","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9085d7c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './contact.style.scss';\r\nimport Observer from '@researchgate/react-intersection-observer';\r\n\r\n\r\nconst defaultProfileImage = 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png'\r\n\r\nfunction scureUrl(url) {\r\n    if (!url) {\r\n        return defaultProfileImage;\r\n    }\r\n    if (url.indexOf('https') < 0) {\r\n        url = url.replace('http', 'https');\r\n    }\r\n    return url;\r\n}\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { active: false, visibility: false };\r\n\r\n        this.setActive = this.setActive.bind(this);\r\n        this.setNotActive = this.setNotActive.bind(this);\r\n        this.onImageError = this.onImageError.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    setActive() {\r\n        this.setState({ active: true });\r\n    }\r\n\r\n    setNotActive() {\r\n        this.setState({ active: false });\r\n    }\r\n\r\n    onImageError(e) {\r\n        e.target.onerror = null;\r\n        e.target.src = defaultProfileImage;\r\n    }\r\n\r\n    handleChange(event) {\r\n        if (event.isIntersecting) {\r\n            this.setState({ visibility: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { profile_image, icon, job, name, company_name, phone, email } = this.props;\r\n        const backgroundImage = scureUrl(profile_image);\r\n\r\n        return (\r\n            <div>\r\n                <Observer onChange={this.handleChange} rootMargin=\"0% 0% 25%\">\r\n                    <div className=\"contact\"\r\n                         onMouseOver={this.setActive}\r\n                         onMouseLeave={this.setNotActive}>\r\n                        {this.state.visibility && (\r\n                            <React.Fragment>\r\n                                <div className={`image ${this.state.active ? 'active' : ''}`}>\r\n                                    <img src={backgroundImage} onError={this.onImageError} className=\"img-fluid\"\r\n                                         alt=\"Contact Iamge\"></img>\r\n                                </div>\r\n                                < div className=\"icon\">\r\n                                    <img src={icon} onError={this.onImageError} className=\"img-fluid\" alt=\"icon\"></img>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                        <div className=\"name\">{name}</div>\r\n                        <div className=\"desc\">{job && job + ' |'} {company_name}</div>\r\n                        {this.state.active && (\r\n                            <div className=\"more\">\r\n                                {phone && <div className=\"phone\">Phone Number {phone}</div>}\r\n                                {email && <div className=\"email\">{email}</div>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Observer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './navbar.style.scss'\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"title\">Contact List</div>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search...\"></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Contact from './contact/contact.component';\nimport Nav from './navbar/navbar.component'\nimport './style.scss';\nimport { getContacts } from './contacts.service.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [],\n      loaded: false,\n      error: '',\n    };\n  }\n\n  componentDidMount() {\n    getContacts()\n      .then(response => response.json())\n      .then(contacts => {\n        this.count++;\n        this.setState({\n          loaded: true,\n          contacts: contacts\n        });\n      })\n      .catch(error => { this.setState({ loaded: true, error }); })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Nav />\n        <div className=\"contact-list\">\n          {!this.state.loaded && <div className=\"loader\">Loading...</div>}\n          {this.state.error && <div className=\"error\">Error: {this.state.error.message}</div>}\n          {this.state.loaded && !this.state.error && (\n            <div className=\"contacts-container\">\n              {this.state.contacts.length > 0 ? this.state.contacts.map((contact, index) =>\n                <Contact key={index} {...contact} />\n              ) : 'No Available Contacts Found :-('}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","export function getContacts() {  \r\n  return fetch('https://candidate-test.herokuapp.com/contacts');\r\n}"],"sourceRoot":""}